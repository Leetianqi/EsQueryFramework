package com.es.config.es;import com.es.enums.SubscriptionSectionEnum;import com.es.param.result.*;import com.google.gson.Gson;import org.elasticsearch.search.SearchHit;import java.util.*;import java.util.stream.Collectors;import static com.es.enums.SubscriptionSectionEnum.SUBSCRIPTION_OPTION_LIST;public class EvsSubscriptionConvertor implements SearchHitConvertor<EvsSubscriptionDocument> {    private static volatile EvsSubscriptionConvertor instance;    private static final Gson GSON = new Gson();    private EvsSubscriptionConvertor() {    }    public static EvsSubscriptionConvertor getInstance() {        if (instance != null) {            return instance;        } else {            Class var0 = EvsSubscriptionConvertor.class;            synchronized (EvsSubscriptionConvertor.class) {                if (instance == null) {                    instance = new EvsSubscriptionConvertor();                }                return instance;            }        }    }    /**     * @param searchHit     * @return     */    @Override    public EvsSubscriptionDocument convert(SearchHit searchHit) {        //从es的hit中获取map,把Map转化成对象        Map<String, Object> source = searchHit.getSourceAsMap();        EsSubscriptionBasicInfo basicInfo = new EsSubscriptionBasicInfo();        EsSubscriptionConfigInfo configInfo = new EsSubscriptionConfigInfo();        EsSubscriptionStatusInfo statusInfo = new EsSubscriptionStatusInfo();        EsSubscriptionMatchConfigInfo matchConfigInfo = new EsSubscriptionMatchConfigInfo();        //反选        String oldOptionListNot =                (String) source.get(SubscriptionSectionEnum.OLD_OPTION_LIST_NOT_STRING.getCode());        Object optionListObject = source.get(SUBSCRIPTION_OPTION_LIST.getCode());        List<OptionBean> optionList = new ArrayList<>();        if (optionListObject instanceof List) {            List<Map<String, Object>> optionListMap = (List<Map<String, Object>>) optionListObject;            for (Map<String, Object> optionMap : optionListMap) {                OptionBean optionBean = new OptionBean();                // 获取 option_code 对象                Object optionCodeObj = optionMap.get("option_code");                // 判断 optionCodeObj 是否是列表类型，然后进行转换                List<String> optionCodeList = (optionCodeObj instanceof List)                        ? ((List<Object>) optionCodeObj).stream()                        .filter(Objects::nonNull)                        .map(Object::toString)                        .collect(Collectors.toList())                        : Collections.emptyList();                optionBean.setOptionCode(optionCodeList);                optionBean.setOptionType((String) optionMap.get("option_type"));                optionList.add(optionBean);            }        }        Object optionListNotObject = source.get(SubscriptionSectionEnum.SUBSCRIPTION_OPTION_LIST_NOT.getCode());        List<OptionBean> optionListNot = new ArrayList<>();        if (optionListNotObject instanceof List) {            List<Map<String, Object>> optionListNotMap = (List<Map<String, Object>>) optionListNotObject;            for (Map<String, Object> optionMap : optionListNotMap) {                OptionBean optionBean = new OptionBean();                // 获取 option_code 对象                Object optionCodeObj = optionMap.get("option_code");                // 判断 optionCodeObj 是否是列表类型，然后进行转换                List<String> optionCodeList = (optionCodeObj instanceof List)                        ? ((List<Object>) optionCodeObj).stream()                        .filter(Objects::nonNull)                        .map(Object::toString)                        .collect(Collectors.toList())                        : Collections.emptyList();                optionBean.setOptionCode(optionCodeList);                optionBean.setOptionType((String) optionMap.get("option_type"));                optionListNot.add(optionBean);            }        }        return new EvsSubscriptionDocument(basicInfo, configInfo, statusInfo, matchConfigInfo, null, optionList, optionListNot, null, oldOptionListNot);    }}